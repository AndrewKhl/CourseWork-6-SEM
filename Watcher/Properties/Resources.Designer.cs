//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Watcher.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Watcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add All.
        /// </summary>
        public static string AddAll {
            get {
                return ResourceManager.GetString("AddAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add process.
        /// </summary>
        public static string AddProcess {
            get {
                return ResourceManager.GetString("AddProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на alredy created!.
        /// </summary>
        public static string AlredyCreated {
            get {
                return ResourceManager.GetString("AlredyCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string CaptionWorkWindow {
            get {
                return ResourceManager.GetString("CaptionWorkWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CPU.
        /// </summary>
        public static string CPU {
            get {
                return ResourceManager.GetString("CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current data.
        /// </summary>
        public static string CurrentData {
            get {
                return ResourceManager.GetString("CurrentData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dark.
        /// </summary>
        public static string Dark {
            get {
                return ResourceManager.GetString("Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disk.
        /// </summary>
        public static string Disk {
            get {
                return ResourceManager.GetString("Disk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duration.
        /// </summary>
        public static string Duration {
            get {
                return ResourceManager.GetString("Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hello.
        /// </summary>
        public static string Hello {
            get {
                return ResourceManager.GetString("Hello", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IP Adress.
        /// </summary>
        public static string IPadress {
            get {
                return ResourceManager.GetString("IPadress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на kbit/s.
        /// </summary>
        public static string Kbits {
            get {
                return ResourceManager.GetString("Kbits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Light.
        /// </summary>
        public static string Light {
            get {
                return ResourceManager.GetString("Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading.
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has exceeded the maximum allowed value.
        /// </summary>
        public static string MaxAllowed {
            get {
                return ResourceManager.GetString("MaxAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, input name process.
        /// </summary>
        public static string NameProcess {
            get {
                return ResourceManager.GetString("NameProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Network.
        /// </summary>
        public static string Network {
            get {
                return ResourceManager.GetString("Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Performance counter.
        /// </summary>
        public static string PerformCounter {
            get {
                return ResourceManager.GetString("PerformCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port.
        /// </summary>
        public static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process.
        /// </summary>
        public static string Process {
            get {
                return ResourceManager.GetString("Process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAM.
        /// </summary>
        public static string RAM {
            get {
                return ResourceManager.GetString("RAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove All.
        /// </summary>
        public static string RemoveAll {
            get {
                return ResourceManager.GetString("RemoveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на sec.
        /// </summary>
        public static string Sec {
            get {
                return ResourceManager.GetString("Sec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, select a process!.
        /// </summary>
        public static string SelectProcess {
            get {
                return ResourceManager.GetString("SelectProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server.
        /// </summary>
        public static string Server {
            get {
                return ResourceManager.GetString("Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server connected.
        /// </summary>
        public static string ServerConnected {
            get {
                return ResourceManager.GetString("ServerConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server is not avaible.
        /// </summary>
        public static string ServerNotAvaible {
            get {
                return ResourceManager.GetString("ServerNotAvaible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show violations windows.
        /// </summary>
        public static string ShowWindows {
            get {
                return ResourceManager.GetString("ShowWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на State.
        /// </summary>
        public static string State {
            get {
                return ResourceManager.GetString("State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop.
        /// </summary>
        public static string Stop {
            get {
                return ResourceManager.GetString("Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на successfully created!.
        /// </summary>
        public static string SuccessfullyCreated {
            get {
                return ResourceManager.GetString("SuccessfullyCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Theme.
        /// </summary>
        public static string Theme {
            get {
                return ResourceManager.GetString("Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unregistered device detected ID.
        /// </summary>
        public static string UnregDevice {
            get {
                return ResourceManager.GetString("UnregDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unregistered process detected.
        /// </summary>
        public static string UnregProcess {
            get {
                return ResourceManager.GetString("UnregProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use only permitted processes.
        /// </summary>
        public static string UseProcess {
            get {
                return ResourceManager.GetString("UseProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Work with process.
        /// </summary>
        public static string WorkWithProcess {
            get {
                return ResourceManager.GetString("WorkWithProcess", resourceCulture);
            }
        }
    }
}
