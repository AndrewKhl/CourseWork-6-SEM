<Window x:Class="Watcher.WorkWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:Watcher"
        xmlns:res="clr-namespace:Watcher.Properties"
        mc:Ignorable="d"
        Icon="pack://application:,,,/icons/icon.ico"
        Title="{Binding CurrentUser}" Height="620" Width="800"
        Closing="Window_Closing"
        Style="{DynamicResource WindowStyle}">
    <Window.Resources>
        <SolidColorBrush Color="White" x:Key="backgroundApp" />
        
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="ToolTip" 
                             Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <local:ShowMessageCommand x:Key="MessageCommand" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="30"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Orientation="Vertical" HorizontalAlignment="Stretch">
            <Menu HorizontalAlignment="Stretch">
                <MenuItem Header="{x:Static res:Resources.Theme}">
                    <MenuItem Header="{x:Static res:Resources.Dark}" Click="MenuItem_Click"/>
                    <MenuItem Header="{x:Static res:Resources.Light}" Click="MenuItem_Click"/>
                </MenuItem>
            </Menu>
            <Label FontSize="30" Margin="0 -10 0 0" Content="{x:Static res:Resources.CaptionWorkWindow}"/>
        </StackPanel>
        <Label Grid.Row="1" Grid.Column="1" Content="{x:Static res:Resources.Loading}"/>
        <Label Grid.Row="1" Grid.Column="2" Content="{x:Static res:Resources.Duration}"/>
        <Label Grid.Row="2" Style="{DynamicResource CaptionSubThems}" Content="{x:Static res:Resources.CPU}"/>
        <Label Grid.Row="3" Style="{DynamicResource CaptionSubThems}" Content="{x:Static res:Resources.RAM}"/>
        <Label Grid.Row="4" Style="{DynamicResource CaptionSubThems}" Content="{x:Static res:Resources.Network}"/>
        <Label Grid.Row="5" Style="{DynamicResource CaptionSubThems}" Content="{x:Static res:Resources.Disk}"/>
        <Label Grid.Row="6" Style="{DynamicResource CaptionSubThems}" Content="{x:Static res:Resources.Server}"/>
        <StackPanel Grid.Row="2" Grid.Column="1">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="LoadCPU" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesForPersent/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label>%</Label>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="1">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="LoadRAM" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesForPersent/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label>%</Label>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.Column="1">
            <TextBox Margin="35 0 0 0" IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="LoadNetwork" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesForInteger/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="{x:Static res:Resources.Kbits}"/>
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="1">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="LoadDisk" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesForPersent/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label>%</Label>
        </StackPanel>

        <StackPanel Grid.Row="6" Grid.Column="1">
            <Label Content="{x:Static res:Resources.IPadress}"/>
            <TextBox Name="inputIP" IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="IpAddress">
                        <Binding.ValidationRules>
                            <local:RulesForIp/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="2">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="TimeLimitCPU" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesFromTime/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="{x:Static res:Resources.Sec}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="2">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="TimeLimitRAM" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesFromTime/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="{x:Static res:Resources.Sec}"/>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.Column="2">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="TimeLimitNetwork" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesFromTime/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="{x:Static res:Resources.Sec}"/>
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="2">
            <TextBox IsEnabled="{Binding CanEdited}">
                <TextBox.Text>
                    <Binding Path="TimeLimitDisk" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <local:RulesFromTime/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Content="{x:Static res:Resources.Sec}"/>
        </StackPanel>

        <StackPanel Grid.Row="6" Grid.Column="2">
            <Label Content="{x:Static res:Resources.Port}"/>
            <TextBox>
                <TextBox.Text>
                    <Binding Path="Port">
                        <Binding.ValidationRules>
                            <local:RulesForPort/>
                            <ExceptionValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>

        <StackPanel Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" Margin="0 0 0 0" HorizontalAlignment="Right">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding UseGoodProcesses}" IsEnabled="{Binding CanEdited}"/>
                    <Label FontSize="15" Content="{x:Static res:Resources.UseProcess}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding ShowMessageWindows}" IsEnabled="{Binding CanEdited}"/>
                    <Label FontSize="15" Content="{x:Static res:Resources.ShowWindows}"/>
                </StackPanel>
            </StackPanel>
            <Button IsEnabled="{Binding CanEdited}" MinHeight="40" MinWidth="150" HorizontalAlignment="Center" VerticalAlignment="Center"
                    FontWeight="Normal" FontSize="15" Margin="20 0 30 0" Click="OpenProcessesWindow" Content="{x:Static res:Resources.AddProcess}"/>
        </StackPanel>

        <Button Name="btnData" Click="BtnData_Click" Grid.Row="8" Margin="20 0 0 10" Width="130" HorizontalAlignment="Left"
                Grid.ColumnSpan="2" Content="{x:Static res:Resources.CurrentData}" FontSize="18" FontWeight="Bold"/>

        <StackPanel Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">
            <Button Name="btnStop" Click="BtnStop_Click" IsEnabled="False" Style="{DynamicResource ButtonStyle}" Content="{x:Static res:Resources.Stop}"/>
            <Button Name="btnStart" Click="BtnStart_Click" Style="{DynamicResource ButtonStyle}" Content="{x:Static res:Resources.Start}"/>
        </StackPanel>

        <tb:TaskbarIcon 
            IconSource="pack://application:,,,/icons/icon.ico" 
            ToolTipText="Monitor Tool" 
            LeftClickCommand="{StaticResource MessageCommand}" 
            LeftClickCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </Grid>
</Window>
